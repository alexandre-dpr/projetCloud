name: Build-and-Push-to-Container-Registry

on:
  workflow_run:
    workflows: ["Tests-Unitaires-Backend"]
    types:
      - completed

jobs:
  backend:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract project version from pom.xml
        id: extract-version
        uses: entimaniac/read-pom-version-action@1.0.0

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: DÃ©finir l'environnement
        run: |
          if [ "${{ github.event.workflow_run.head_branch }}" == "develop" ]; then
            echo "ENVIRONMENT=recette" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=prod" >> $GITHUB_ENV
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: backend/Dockerfile-prod
          push: true
          tags: ghcr.io/cripsoo/projetcloud/backend-${{ env.ENVIRONMENT }}:${{ steps.extract-version.outputs.version }}

  frontend:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract project version from pom.xml
        id: extract-version
        uses: entimaniac/read-pom-version-action@1.0.0

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: frontend/Dockerfile-prod
          push: true
          tags: ghcr.io/cripsoo/projetcloud/frontend-${{ env.ENVIRONMENT }}:${{ steps.extract-version.outputs.version }}
